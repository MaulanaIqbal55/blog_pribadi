<?xml version='1.0' encoding='utf-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://urara-demo.netlify.app/</id>
  <title><![CDATA[Iqbal55]]></title>
  <subtitle><![CDATA[Blog]]></subtitle>
  <icon>https://urara-demo.netlify.app/favicon.png</icon>
  <link href="https://urara-demo.netlify.app" />
  <link href="https://urara-demo.netlify.app/atom.xml" rel="self" type="application/atom+xml" />
  <updated>2023-06-02T10:41:19.310Z</updated>
  <author>
    <name><![CDATA[M. Iqbal Maulana]]></name>
  </author>
  <category term="Full Stack" scheme="https://urara-demo.netlify.app/?tags=Full%20Stack" />
  <category term="Front End" scheme="https://urara-demo.netlify.app/?tags=Front%20End" />
  <category term="Back End" scheme="https://urara-demo.netlify.app/?tags=Back%20End" />
  <category term="Machine Learning" scheme="https://urara-demo.netlify.app/?tags=Machine%20Learning" />
  <category term="AI" scheme="https://urara-demo.netlify.app/?tags=AI" />
  <category term="Automation" scheme="https://urara-demo.netlify.app/?tags=Automation" />
  <category term="Project" scheme="https://urara-demo.netlify.app/?tags=Project" />
  <category term="Urara" scheme="https://urara-demo.netlify.app/?tags=Urara" />
  <category term="Elements" scheme="https://urara-demo.netlify.app/?tags=Elements" />
  <category term="Front-Matter" scheme="https://urara-demo.netlify.app/?tags=Front-Matter" />
  <category term="Hello World" scheme="https://urara-demo.netlify.app/?tags=Hello%20World" />
  <entry>
    <title type="html"><![CDATA[Simple Full Stack AIoT]]></title>
    <link href="https://urara-demo.netlify.app/simple-full-stack-aiot" />
    <id>https://urara-demo.netlify.app/simple-full-stack-aiot</id>
    <published>2023-04-08T00:00:00.000Z</published>
    <updated>2021-12-12T00:00:00.000Z</updated>
    <content type="html">
      <![CDATA[<p>Artikel ini akan menjelaskan bagaimana cara membuat sebuah web app untuk Internet of Thing (IoT). Berikut merupakan outline dari artikel ini:</p><ul><li>Pernyataan Masalah. </li><li>Gambaran Umum.</li><li>Flask (Back End component).</li><li>React (Front End component).</li><li>MongoDB (Database Component).</li><li>ARIMA (Machine Learning Component).</li><li>Kalibrasi ADC ESP32.</li></ul><h2 id="pernyataan-masalah"><a href="#pernyataan-masalah"><strong>Pernyataan Masalah</strong></a></h2><hr><h2 id="gambaran-umum"><a href="#gambaran-umum"><strong>Gambaran Umum</strong></a></h2><hr><p>Terdapat banyak stuktur, dan pattern yang dapat digunakan dalam membuat sebuah projek full-stack. Pada artikel ini, kita akan menggunakan <strong>Three Tier Architecture</strong>.</p><p><strong>Three Tier Archicture</strong> merupakan arsitektur yang membagi sebuah aplikasi software ke dalam tiga tier yaitu: Presentation tier, Application Layer, dan Data tier. </p><ol><li>Presentation tier: Merupakan tier yang berisikan layer user interface, dan layer komunikasi, dimana user akan berinteraksi dengan aplikasi. Tier ini berfungsi untuk mengoleksi, dan menampilkan data untuk user.</li><li>Application tier: Merupakan tier yang berisikan layer yang berfungsi untuk memroses data dari user, atau database. Sehingga tier ini dapat berisikan layer business logic, dan data acces layer.</li><li>Data tier: Merupakan tier dimana data yang akan digunakan oleh Application tier disimpan.</li></ol><p>Dalam arsitektur ini, semua komunikasi pada tier dimediasi oleh Application layer dikarenakan Data tier, dan Presentation tier tidak dapat berkomunikasi secara langsung. </p><p>Untuk komunikasi antar tier, artikel ini menggunakan protokol HTTPS sebagai jembatan antara Presentation tier, dan Application tier. Sedangkan untuk komunikasi antara Data tier, dan Application tier digunakan database driver.</p><p>Berikut merupakan technology stack yang akan digunakan:</p><ol><li>Presentation tier: React.</li><li>Application tier: Flask.</li><li>Data tier: MongoDB.</li></ol><p>Karena pada projek kali ini akan menggunakan Machine Learning, maka akan ditambahkan satu tier lagi yang bernama ML tier. Tier ini dibuat karena keterbatasan resource server yang akan digunakan (karena free). </p><p>Keseluruhan arsitektur beserta komunikasi protokol pada proyek ini dapat dilihat pada gambar 1. </p><div class="overflow-x-auto mb-4"><table class="table w-full"><thead><tr><th align="center"><img src="aiot@arsitektur.png" alt="Gambar 1. Arsitektur Sistem" class="rounded-lg my-2" loading="lazy" decoding="async"></th></tr></thead><tbody><tr><td align="center"><b>Gambar 1</b>. Arsitektur Sistem</td></tr></tbody></table></div><p>Gambar 1 memperlihatkan server yang digunakan untuk menampung tier, dan jenis protokol komunikasinya yang tertulis pada tanda panah. Variasi pada protokol komunikasi, dan server service dilakukan secara sengaja, tujuanya agar penulis dapat belajar banyak hal dalam membuat proyek ini. </p><p>Sebagai tambahan, akan digunakan kontainer untuk satu server service yang sama. Sehingga, Application tier dan Presentation tier akan masuk ke dalam kontainer yang sama. Sedangkan, Ml tier akan masuk ke dalam kontainernya sendiri.</p><h2 id="flask"><a href="#flask"><strong>Flask</strong></a></h2><hr><p>Flask merupakan sebuah web framemework dari python. Pada proyek ini, Flask digunakan sebagai back end untuk Application tier. Berikut fungsi yang harus terpenuhi pada Flask:</p><ol><li>Mampu mengirimkan perintah pengaktifan relay ke mikrokontroler; dan menerima data mentah sensor dari mikrokontroler. Semua komunikasi ini dilakukan dengan protokol MQTT.</li><li>Mampu mengirimkan, dan menerima data ke/dari MongoDB. Yaitu data mentah sensor, dan data sensor yang telah terkalibrasi lewat MongoDB driver.</li><li>Mampu melakukan kalibrasi pada sensor untuk mendapatkan data sensor yang telah terkalibrasi. Parameter hasil kalibrasi akan dikirimkan ke Presentation layer untuk ditampilkan user sehingga user dapat memilih untuk update parameter atau tidak.</li><li>Mampu mengirimkan data sensor yang telah terkalibrasi ke Presentation Layer lewat protokol HTTPs.</li><li>Mampu mengirimkan data sensor yang telah terkalibrasi ke Streamlit untuk diolah oleh ML tier, kemudian dapat menerima hasil olahan ML tier. Semua komunikasi dilakukan menggunakan Websocket.</li></ol><p>Fungsi diatas, secara umum hanya merupakan manajemen komunikasi antara server service yang digunakan dengan berbagai protokol komunikasi, ditambah pemrosesan kalibrasi sensor.</p><h3 id="fungsi-1"><a href="#fungsi-1"><strong>Fungsi 1</strong></a></h3><p>Untuk memenuhi fungsi 1, digunakan HiveMq sebagai MQTT broker untuk memediasi komunikasi antara Application tier, dan Mikrokontroller. Adapun topik MQTT yang akan dibuat:</p><ul><li>teaml55/data: Merupakan topik yang berisi data sensor dengan format data volt1:cur1:volt2:cur2. </li><li>teaml55/relay: Merupakan topik yang berisi perintah aktivasi relay dengan format data relay1:relay2. </li></ul><p>Gambar 2 menunjukkan perilaku subcribe, dan publish antara mikrokontroler dan Application tier.</p><div class="overflow-x-auto mb-4"><table class="table w-full"><thead><tr><th align="center"><img src="aiot@mqttbroker.png" alt="aiot@mqttbroker.png" class="rounded-lg my-2" loading="lazy" decoding="async"></th></tr></thead><tbody></tbody></table></div><p>|<b>Gambar 2</b>. Arsitektur MQTT Broker</p><p>Sebagai catatan, MQTT broker akan mengubah payload - data yang dikirimkan- menjadi byte array. Sehingga, dalam melakukan subcribe diperlukan konversi byte array ini terlebih dahulu. </p><p>Untuk mendapatkan perintah aktiviasi relay dari user, maka diperlukan komunikasi antara Presentation tier dan Application tier, komunikasi ini dilakukan menggunakan protokol HTTPs (lihat gambar 2). </p><p>Pada web app, akan disediakan toggle button untuk masing-masing relay, apabila user menekan click button dengan tulisan send data. Maka status toggle button ini akan dikombinasikan dalam satu Json, dan akan di-fetch ke ‘api/toggle’ menggunakan metode POST. Flask akan melakukan request pada ‘api/toggle’ untuk mendapatkan datanya.</p><h3 id="fungsi-2"><a href="#fungsi-2"><strong>Fungsi 2</strong></a></h3><p>Untuk memenuhi fungsi 2, digunakan MongoDB driver untuk berinteraksi dengan mongoDB database. Pada database terdapat dua kluster yaitu data sensor mentah, dan data sensor terkalibrasi. </p><p>Format data yang akan dikirimkan ke database dapat dilihat pada seksi MonogoDB. Pengiriman dijalankan secara sinkronus dengan alur seperti pada gambar 3.</p><h3 id="fungsi-3"><a href="#fungsi-3"><strong>Fungsi 3</strong></a></h3><p>Sebelum dilakukan kalibrasi, terlebih dahulu data-data sensor difilter. Hal ini harus dilakukan karena data sensor banyak mengandung derau. Dua alasan utama: alat sensor yang kurang akurat, dan sifat non-linearitas pada Analog to Digital Converter (ADC) pada Esp32. Filter yang akan digunakan adalah <strong>Chebyshev filter Tipe I</strong>, dengan <strong>Matched Z-Transform</strong> untuk mentrasformasi filternya ke digital.</p><h2 id="kalibrasi-adc"><a href="#kalibrasi-adc"><strong>Kalibrasi ADC</strong></a></h2><hr><p>Karena nature dari ADC ESP32 yang bersifat non-linar seperti yang dibahas sebelumnya, maka diperlukan sebuah teknik untuk membuat sifat non-liner ini setidaknya mendekati linear. Pada tulisan ini digunakan pendekatan Look Up Table (LUT).</p><p>LUT merupakan sebuah teknik untuk mengakses hasil hanya dengan menggunakan indexing dari sekumpulan array. Pada kalibrasi, isi pada array biasanya merupakan nilai sensor yang benar. Karena itu, LUT tidak memerlukan komputasi sehinnga time complexity dari teknik kalibrasi ini adalah O(1).</p>]]>
    </content>
    <category term="Full Stack" scheme="https://urara-demo.netlify.app/?tags=Full%20Stack" />
    <category term="Front End" scheme="https://urara-demo.netlify.app/?tags=Front%20End" />
    <category term="Back End" scheme="https://urara-demo.netlify.app/?tags=Back%20End" />
    <category term="Machine Learning" scheme="https://urara-demo.netlify.app/?tags=Machine%20Learning" />
  </entry>
  <entry>
    <title type="html"><![CDATA[Voice Asisstant]]></title>
    <link href="https://urara-demo.netlify.app/voice-assistant" />
    <id>https://urara-demo.netlify.app/voice-assistant</id>
    <published>2023-04-08T00:00:00.000Z</published>
    <updated>2021-12-12T00:00:00.000Z</updated>
    <content type="html">
      <![CDATA[<p>Fitur dari Voice Asisstant Ini:</p><ul><li><p>Navigasi:</p><ul><li>Membuka, dan keluar folder.</li><li>Search File.</li><li>Copy, dan paste file.</li></ul></li><li><p>Video:</p><ul><li>Memainkan video.</li><li>Mengunduh video.</li><li>Memotong video.</li></ul></li><li><p>Bahasa:</p><ul><li><a href="#membuat-va-support-bahasa-indonesia">Bahasa Indonesia</a>.</li></ul></li></ul><h3 id="membuat-va-support-bahasa-indonesia"><a href="#membuat-va-support-bahasa-indonesia"><strong>Membuat VA support bahasa Indonesia</strong></a></h3><hr><p>Untuk membuat fitur ini, saya menggunakan transformer model <a href="https://huggingface.co/indonesian-nlp/wav2vec2-large-xlsr-indonesian" rel="nofollow noopener noreferrer external" target="_blank">Wav2Vec2-Large-XLSR-Indonesian</a> yang merupakan fine-tuned dari <a href="https://huggingface.co/facebook/wav2vec2-large-xlsr-53" rel="nofollow noopener noreferrer external" target="_blank">facebook/wav2vec2-large-xlsr-53</a>  menggunakan dataset <a href="https://huggingface.co/datasets/common_voice" rel="nofollow noopener noreferrer external" target="_blank">Indonesian Common Voice dataset</a>. Pada model ini, suara harus berkisar 16 KHz. Model dijalankan menggunakan library ‘Hugging face Transformers’ secara offline. Panduan untuk membuat inference offline dapat dilihat <a href="https://9to5tutorial.com/using-huggingface-transformers-models-offline" rel="nofollow noopener noreferrer external" target="_blank">disini</a> atau dari <a href="https://huggingface.co/docs/transformers/installation" rel="nofollow noopener noreferrer external" target="_blank">official</a>.</p><p>Masalah lain yang dapat terjadi adalah mispelling, sehingga dibutuhkan <a href="https://en.wikipedia.org/wiki/Approximate_string_matching" rel="nofollow noopener noreferrer external" target="_blank">Approximate string matching</a>. </p><p>Referensi untuk <a href="https://towardsdatascience.com/deep-learning-for-semantic-text-matching-d4df6c2cf4c5" rel="nofollow noopener noreferrer external" target="_blank">semantic similarity</a></p><div class="overflow-x-auto mb-4"><table class="table w-full"><thead><tr><th align="center"><img src="va@support_bahasa_indonesia.PNG" alt="va@support_bahasa_indonesia.PNG" class="rounded-lg my-2" loading="lazy" decoding="async"></th></tr></thead><tbody></tbody></table></div><p>|<b>Gambar 2</b>. Arsitektur AI Support Bahasa Indonesia</p><h3 id="memainkan-video"><a href="#memainkan-video"><strong>Memainkan Video</strong></a></h3><hr>]]>
    </content>
    <category term="AI" scheme="https://urara-demo.netlify.app/?tags=AI" />
    <category term="Automation" scheme="https://urara-demo.netlify.app/?tags=Automation" />
    <category term="Project" scheme="https://urara-demo.netlify.app/?tags=Project" />
  </entry>
  <entry>
    <title type="html"><![CDATA[Elements]]></title>
    <link href="https://urara-demo.netlify.app/hello-world/elements" />
    <id>https://urara-demo.netlify.app/hello-world/elements</id>
    <published>2021-12-12T00:00:00.000Z</published>
    <updated>2023-06-02T10:40:19.259Z</updated>
    <content type="html">
      <![CDATA[<h2 id="headings"><a href="#headings">Headings</a></h2><h3 id="heading"><a href="#heading">Heading</a></h3><h4 id="heading-1"><a href="#heading-1">Heading</a></h4><h5 id="heading-2"><a href="#heading-2">Heading</a></h5><h6 id="heading-3"><a href="#heading-3">Heading</a></h6><hr><h2 id="paragraphs"><a href="#paragraphs">Paragraphs</a></h2><p><span class="spoiler">spoiler</span></p><p><strong><em>The</em></strong> <em>quick</em> <u>brown</u> <a href="https://www.foxnews.com/" rel="nofollow noopener noreferrer external" target="_blank">fox</a> <code>jumps</code> <del>over</del> the lazy <strong>dog</strong>.</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p><p>建格的何另始養離腳合兒現各談花車是都無處與費別、信善行修覺自！壓總談下市率應次司公母兒用什一線送用標地倒直作任老數年白安足個後引使名隊懷持日落異今特族？</p><p>一士我像衣買了人義，計念？</p><p>期老外並中般灣作各現初知強車我的品式企國立市它北待不型師文人注信方，各成能久，然的孩界，他事應在創灣字母寫麼，會不作散際，學節水……全當名己會天還著行多是生如內他道了家至種樣見景時一……區行水影。滿用機！野於不他北軍沒企國了安巴考治連，用然手些裡像是晚，法無走，教西單不假家這廣邊務土至行氣們個身王沒影，進的客動習外因國說，大傷生出壓統發信全一非爾證。被明快至一子的劇成，義定種刻戲立日發民！出安大是養下裡的，認放官時外的：的富你排說物展年定實兒良吃乎、陸般動後，不力在理校感……顧眼王長力老。</p><p>重多一？生光聯……動說麼了：起形市般我題臉事級。</p><blockquote><p>In solitude, where we are least alone.</p></blockquote><p>私は絶対いよいよ漠然たる相当心に対してはずの他にできるならな。けっして今に養成めも何だか漠然たる仕事たないだけにしからならでをは話安んずるないですて、わざわざには聴いましたなけれた。権力を気がつきなのはどうしても先刻が毫もらしくでう。</p><p>ようやく嘉納さんに供獄とても承諾をやるでしょ習慣その主義それか攻撃にに対してお関係でたあるですと、その今は俺か釣竿頭に喜ぶば、嘉納さんののより考のそれをよくごふりと云ってあなた一団がお融和へ見えようにまあご経験にしずませば、とうとうもっとも誤解になるたでいるないのを思っですた。しかもしかしながら大首へする気もずいぶん美味と移ろたて、この言葉にもいうですてってがたにしてしまえたない。この限り時代のためその学校も私上を吹き込んんかと大森さんをしなませ、人の今日んというご講義ただですば、晩の時で長靴が始めだけの時代に前もっでいて、どうの今日が思えばそのためとあたかも足りんなとしだ事でが、ないますなて少し実職業いでし事だろたませ。</p><p>さて学校か不幸か話に教えですけれども、今中力が起るて得るですためがご講演の今に訊かたです。多年をはどうしても思うでいうんたずでと、まるで何とも繰り返しが周旋はさっそく悪いうので。</p><p><a href="#headings">scrollToTop</a></p><hr><h2 id="lists"><a href="#lists">Lists</a></h2><h3 id="definition-list-dl"><a href="#definition-list-dl">Definition List (dl)</a></h3><dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl><h3 id="ordered-list-ol"><a href="#ordered-list-ol">Ordered List (ol)</a></h3><ol><li>List Item 1</li><li>List Item 2</li><li>List Item 3</li></ol><h3 id="unordered-list-ul"><a href="#unordered-list-ul">Unordered List (ul)</a></h3><ul><li>List Item 1</li><li>List Item 2</li><li>List Item 3</li></ul><h3 id="checkbox-list-ul"><a href="#checkbox-list-ul">Checkbox List (ul)</a></h3><ul class="contains-task-list"><li class="task-list-item"><input type="checkbox" disabled> List Item 1 unchecked</li><li class="task-list-item"><input type="checkbox" checked disabled> List Item 2 checked</li><li class="task-list-item"><input type="checkbox" checked disabled> List Item 3 checked</li></ul><h2 id="table"><a href="#table">Table</a></h2><div class="overflow-x-auto mb-4"><table class="table w-full"><thead><tr><th>Table Header 1</th><th>Table Header 2</th><th>Table Header 3</th></tr></thead><tbody><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr></tbody></table></div><div class="overflow-x-auto mb-4"><table class="table w-full"><thead><tr><th align="left">Table Header 1</th><th align="center">Table Header 2</th><th align="right">Table Header 3</th></tr></thead><tbody><tr><td align="left">Division 1</td><td align="center">Division 2</td><td align="right">Division 3</td></tr><tr><td align="left">Division 1</td><td align="center">Division 2</td><td align="right">Division 3</td></tr><tr><td align="left">Division 1</td><td align="center">Division 2</td><td align="right">Division 3</td></tr></tbody></table></div><p><a href="#headings">scrollToTop</a></p><h2 id="footnotes"><a href="#footnotes">Footnotes</a></h2><p>Here is a footnote reference. <sup id="fnref-1"><a href="#fn-1" class="footnote-ref">1</a></sup></p><p>This is a long note. <sup id="fnref-longnote"><a href="#fn-longnote" class="footnote-ref">longnote</a></sup></p><p>This is an inline note. <sup id="fnref-2"><a href="#fn-2" class="footnote-ref">2</a></sup></p><p><a href="#headings">scrollToTop</a></p><h2 id="code"><a href="#code">Code</a></h2><!-- HTML_TAG_START --><pre class="shiki material-default with-title twoslash lsp" ts="true" title="examples/index.ts"><div class='code-title'>examples/index.ts</div><div class="language-id">ts</div><div class='code-container'><code><div class='line'>for (let <data-lsp lsp='let x: string' >x</data-lsp> in [0]) <data-lsp lsp='var console: Console' >console</data-lsp>.<data-lsp lsp='(method) Console.log(...data: any[]): void' >log</data-lsp>(<data-lsp lsp='let x: string' >x</data-lsp>)</div></code></div></pre><!-- HTML_TAG_END --><!-- HTML_TAG_START --><pre class="shiki material-default twoslash lsp" ts="true"><div class="language-id">ts</div><div class='code-container'><code><div class='line highlight'>interface IdLabel &#123;</div><div class='line highlight'>  id: number /* some fields */</div><div class='line highlight'>&#125;</div><div class='line highlight'>interface NameLabel &#123;</div><div class='line highlight'>  name<data-lsp lsp='let a: NameLabel' ></data-lsp>: string /* other fields */</div><div class='line highlight'>&#125;</div><div class='line dim'>type NameOrId&lt;T extends number | string&gt; = T extends number ? IdLabel : NameLabel</div><div class='line dim'>// This comment should not be included</div><div class='line dim'>&nbsp;</div><div class='line dim'>// ---cut---</div><div class='line dim'>function createLabel&lt;T extends number | string&gt;(idOrName: T): NameOrId&lt;T&gt; &#123;</div><div class='line dim'>  throw &apos;unimplemented&apos;</div><div class='line dim'>&#125;</div><div class='line dim'>&nbsp;</div><div class='line dim'>let a = createLabel(&apos;typescript&apos;)</div></code></div></pre><!-- HTML_TAG_END --><h2 id="misc"><a href="#misc">Misc</a></h2><sup>Lorem</sup> <sub>ipsum</sub> <cite>dolor sit amet</cite>, <acronym title="Consectetur Adipiscing Elit">consectetur adipiscing elit</acronym>, <abbr title="Aliqua">sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</abbr>. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<br><br><p>リバースカードオープン、エネミーコントローラー！</p><p>ライフを 1000 払い、コマンド入力、<kbd>←</kbd> <kbd>→</kbd> <kbd>A</kbd> <kbd>B</kbd>！</p><p>このコマンドにより、全てのアニヲタを破壊する！</p><p><a href="#headings">scrollToTop</a></p><h2 id="svelte-components"><a href="#svelte-components">Svelte Components</a></h2><div data-testid="general-observer"></div><br><div data-testid="general-observer"></div><br><div data-testid="general-observer"></div><div class="footnotes"><hr><ol><li id="fn-1">Here is the footnote.<a href="#fnref-1" class="footnote-backref">↩</a></li><li id="fn-longnote">Here’s one footnote with longer identifier.<a href="#fnref-longnote" class="footnote-backref">↩</a></li><li id="fn-2">You can type footnotes inline, so you don’t have to pick an identifier manually.<a href="#fnref-2" class="footnote-backref">↩</a></li></ol></div>]]>
    </content>
    <category term="Urara" scheme="https://urara-demo.netlify.app/?tags=Urara" />
    <category term="Elements" scheme="https://urara-demo.netlify.app/?tags=Elements" />
  </entry>
  <entry>
    <title type="html"><![CDATA[ToC Disabled]]></title>
    <link href="https://urara-demo.netlify.app/hello-world/toc-disabled" />
    <id>https://urara-demo.netlify.app/hello-world/toc-disabled</id>
    <published>2021-12-12T00:00:00.000Z</published>
    <updated>2023-06-02T10:40:19.259Z</updated>
    <summary type="html"><![CDATA[This post has disabled table of contents.]]></summary>
    <content type="html">
      <![CDATA[<p>This post has disabled table of contents.</p><p>When the <code>toc: false</code> on Front-Matter, toc should not be displayed.</p><h2 id="heading"><a href="#heading">Heading</a></h2><h3 id="heading-1"><a href="#heading-1">Heading</a></h3><h4 id="heading-2"><a href="#heading-2">Heading</a></h4>]]>
    </content>
    <category term="Front-Matter" scheme="https://urara-demo.netlify.app/?tags=Front-Matter" />
  </entry>
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="https://urara-demo.netlify.app/hello-world" />
    <id>https://urara-demo.netlify.app/hello-world</id>
    <published>2021-11-01T00:00:00.000Z</published>
    <updated>2021-12-12T00:00:00.000Z</updated>
    <content type="html">
      <![CDATA[<p>Welcome to Urara! this article contains some basic operations to help you quickly get started.</p><h2 id="developing"><a href="#developing">Developing</a></h2><p>Start a development server:</p><!-- HTML_TAG_START --><pre class="shiki material-default" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'># http://127.0.0.1:5173</div><div class='line'>pnpm dev</div></code></div></pre><!-- HTML_TAG_END --><p>or listen to different IP and port:</p><!-- HTML_TAG_START --><pre class="shiki material-default" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'># http://127.0.0.1:3000</div><div class='line'>pnpm dev --port 3000</div><div class='line'></div><div class='line'># http://0.0.0.0:3000</div><div class='line'>nr dev --host 0.0.0.0 --port 3000</div></code></div></pre><!-- HTML_TAG_END --><h2 id="building"><a href="#building">Building</a></h2><p>Create a production version of ur blog:</p><!-- HTML_TAG_START --><pre class="shiki material-default" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'>pnpm build</div></code></div></pre><!-- HTML_TAG_END --><p>u can preview the built app with <code>pnpm preview</code>.</p><h2 id="documentation"><a href="#documentation">Documentation</a></h2><p>For full documentation, visit <a href="https://urara-docs.netlify.app" rel="nofollow noopener noreferrer external" target="_blank">urara-docs.netlify.app</a>.</p>]]>
    </content>
    <category term="Hello World" scheme="https://urara-demo.netlify.app/?tags=Hello%20World" />
    <category term="Urara" scheme="https://urara-demo.netlify.app/?tags=Urara" />
  </entry>
</feed>